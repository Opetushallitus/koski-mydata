name: Build & Deploy Sovitinpalvelu Lambda

on:
  push:
    branches:
      - master
      - lisaa-test-workflow
env:
  REGION: eu-west-1
  ARTIFACT: dist.zip

permissions:
  id-token: write
  contents: read

jobs:

  test-unit:
    name: Unit tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --omit=optional

      - name: Run unit tests
        run: npm run unit
  
  test-integration:
    name: Integration tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --omit=optional

      - name: Run integration tests
        run: npm run integration
        env:
          NODE_ENV: production
          NODE_CONFIG_ENV: qa
          koski_user_koski: ${{ secrets.KOSKI_API_USER }}
          koski_password_koski: ${{ secrets.KOSKI_API_PASSWORD }}

  
  build:
    name: Build Lambda function
    runs-on: ubuntu-latest

    needs: [test-unit, test-integration]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --omit=optional

      - name: Build
        run: npm run build-without-integration

      - name: Store dist
        uses: actions/upload-artifact@v4
        with:
          name: sovitinpalvelu-dist
          path: ${{ env.ARTIFACT }}


  hash:
    needs: [build]
    name: Generate hash
    runs-on: ubuntu-latest

    outputs:
      short_sha: ${{ steps.generate_short_sha.outputs.short_sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - id: generate_short_sha
        name: Make short hash
        run: |
          shortSha=$(git rev-parse --short ${{ github.sha }})
          echo "short_sha=$shortSha" >> "$GITHUB_OUTPUT"

  upload:
    name: Upload zip artifact to S3
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/master'

    needs: [hash]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials for s3
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OPH_UTILITY_ROLE_ARN }}
          role-session-name: koski-sovitinpalvelu-upload-${{ needs.hash.outputs.short_sha }}
          aws-region: ${{ env.REGION }}
          mask-aws-account-id: "true"

      - name: Restore dist.zip
        uses: actions/download-artifact@v4
        with:
          name: sovitinpalvelu-dist

      - name: Upload dist.zip by commit hash
        id: upload
        run: |
          TARGET="s3://oph-koski-omadata-sovitinpalvelu/${{ needs.hash.outputs.short_sha }}.zip"
          aws s3 cp dist.zip "$TARGET"
          echo "TARGET=$TARGET" >> "$GITHUB_OUTPUT"

  deploy-dev:
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/master'

    needs: [hash, upload]

    environment: dev
    name: Deploy to DEV

    steps:

      - name: Configure AWS credentials for deployment
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.SOVITINPALVELU_DEPLOY_ROLE }}
          role-duration-seconds: 3600
          role-session-name: koski-sovitinpalvelu-deploy-dev-${{needs.hash.outputs.short_sha}}
          aws-region: ${{ env.REGION }}
          mask-aws-account-id: "true"

      - name: Deploy to DEV by updating Lambda
        run: |
          aws lambda update-function-code \
            --function-name get-opinto-oikeudet-dev-new \
            --s3-bucket oph-koski-omadata-sovitinpalvelu \
            --s3-key ${{ needs.hash.outputs.short_sha }}.zip

  deploy-qa:
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/master'

    needs: [hash, deploy-dev]

    environment: qa
    name: Deploy to QA

    steps:

      - name: Configure AWS credentials for deployment
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.SOVITINPALVELU_DEPLOY_ROLE }}
          role-duration-seconds: 3600
          role-session-name: koski-sovitinpalvelu-deploy-qa-${{needs.hash.outputs.short_sha}}
          aws-region: ${{ env.REGION }}
          mask-aws-account-id: "true"

      - name: Deploy to QA by updating Lambda
        run: |
          aws lambda update-function-code \
            --function-name get-opinto-oikeudet-qa-new \
            --s3-bucket oph-koski-omadata-sovitinpalvelu \
            --s3-key ${{ needs.hash.outputs.short_sha }}.zip

  deploy-prod:
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/master'

    needs: [hash, deploy-dev, deploy-qa]

    environment: prod
    name: Deploy to PROD

    steps:

      - name: Configure AWS credentials for deployment
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.SOVITINPALVELU_DEPLOY_ROLE }}
          role-duration-seconds: 3600
          role-session-name: koski-sovitinpalvelu-deploy-prod-${{needs.hash.outputs.short_sha}}
          aws-region: ${{ env.REGION }}
          mask-aws-account-id: "true"

      - name: Deploy to PROD by updating Lambda
        run: |
          aws lambda update-function-code \
            --function-name get-opinto-oikeudet-prod-new \
            --s3-bucket oph-koski-omadata-sovitinpalvelu \
            --s3-key ${{ needs.hash.outputs.short_sha }}.zip
